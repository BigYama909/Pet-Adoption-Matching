{"ast":null,"code":"// Importing necessary React features and styles\nimport React,{useState,useEffect,useRef}from\"react\";import styles from\"./Chat.module.css\";// Importing icons for the chat interface from FontAwesome\nimport{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faComment,faMinus,faTimes}from\"@fortawesome/free-solid-svg-icons\";// Logo image for the chatbot\nimport logo from\"./Images/favicon_and_chatbot_logo.jpeg\";// Chatbot component definition\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatbotComponent(){// State hooks for managing chatbot visibility, minimization, messages, and menu display\nconst[isVisible,setIsVisible]=useState(false);const[isMinimized,setIsMinimized]=useState(false);const[messages,setMessages]=useState([]);const[showMenu,setShowMenu]=useState(false);const[showBackToMenuButton,setShowBackToMenuButton]=useState(false);// useRef hook for managing automatic scrolling to the end of messages\nconst endOfMessagesRef=useRef(null);// Effect hook for scrolling to the latest message\nuseEffect(()=>{if(endOfMessagesRef.current){endOfMessagesRef.current.scrollIntoView({behavior:\"smooth\"});}},[messages]);// Effect hook to initialize chatbot messages upon first appearance\nuseEffect(()=>{if(isVisible&&!isMinimized&&messages.length===0){// Set initial messages with a flag to show the logo only for the first set\nsetMessages([{text:[\"Hi there ðŸ‘‹\",\"I'm Scout, the chatbot for Pet Adoption Match\",\"How can I help you?\"],isUser:false,initial:true}]);setShowMenu(true);}},[isVisible,isMinimized]);// Function to toggle chatbot visibility and minimization states\nconst toggleVisibility=()=>{if(isMinimized){// If the chatbot is minimized, unminimize it and make it visible\nsetIsMinimized(false);setIsVisible(true);}else{// Toggle the visible state\nsetIsVisible(!isVisible);}};// Function to minimize the chatbot window\nconst minimizeChatbot=()=>{setIsMinimized(!isMinimized);};// Function to close the chatbot window and reset states\nconst closeChatbot=()=>{setIsVisible(false);setIsMinimized(false);setMessages([]);setShowMenu(false);};// Function to handle user choice and generate a chatbot response\nconst handleUserChoice=choiceText=>{setShowMenu(false);// Immediately show the user's choice\nsetMessages(currentMessages=>[...currentMessages,{text:choiceText,isUser:true}]);let chatbotResponse=\"\";// Switch statement to generate responses based on user choice\nswitch(choiceText){// Cases for different user choices\n// Add chatbot responses accordingly\ncase\"I have a pet that needs a new home.\":chatbotResponse=\"We're here to help! Please provide us with more details about the pet in need so we can assist you better.\";break;case\"I want to adopt a pet.\":chatbotResponse=\"We're so glad you chose us to help you find your new family member.\"+\"Please first sign up for an account or login to start the adoption process.\";case\"I want to contact website owner.\":chatbotResponse=\"Feel free to contact us using the provided contact information on our website. We're happy to assist you!\";break;case\"I am a shelter or rescue employee.\":chatbotResponse=\"Thank you for the important work you do! Please let us know how we can support your efforts.\";break;}// Add the chatbot's response after a delay\nsetTimeout(()=>{setMessages(currentMessages=>[...currentMessages,{text:chatbotResponse,isUser:false}]);},500);setShowBackToMenuButton(true);};// Function to show the main menu and hide the back button\nconst showMainMenu=()=>{setShowMenu(true);setShowBackToMenuButton(false);};return/*#__PURE__*/_jsxs(\"div\",{children:[(!isVisible||isMinimized)&&/*#__PURE__*/_jsxs(\"button\",{className:styles.chatbot_toggler,onClick:toggleVisibility,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faComment}),/*#__PURE__*/_jsx(\"span\",{children:\" Chat\"})]}),isVisible&&!isMinimized&&/*#__PURE__*/_jsxs(\"div\",{className:styles.chatbot,children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Chatbot\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.top_buttons,children:[/*#__PURE__*/_jsx(\"button\",{className:styles.minimize_btn,onClick:minimizeChatbot,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faMinus})}),/*#__PURE__*/_jsx(\"button\",{className:styles.close_btn,onClick:closeChatbot,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTimes})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.chatbox,children:[messages.map((msg,index)=>msg.initial?/*#__PURE__*/_jsxs(\"div\",{className:styles.chatbotMessage,children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Chatbot Logo\",className:styles.chatbot_logo}),msg.text.map((line,lineIndex)=>/*#__PURE__*/_jsx(\"p\",{children:line},lineIndex))]},index):/*#__PURE__*/_jsxs(\"div\",{className:msg.isUser?styles.userMessage:styles.chatbotMessage,children:[!msg.isUser&&/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Chatbot Logo\",className:styles.chatbot_logo}),/*#__PURE__*/_jsx(\"p\",{children:msg.text})]},index)),/*#__PURE__*/_jsx(\"div\",{ref:endOfMessagesRef})]}),showMenu&&/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.menu,\" \").concat(styles.menuSlideUp),children:/*#__PURE__*/_jsxs(\"ul\",{className:styles.user_choices,children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUserChoice(\"I have a pet that needs a new home.\"),children:\"I have a pet that needs a new home.\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUserChoice(\"I want to adopt a pet.\"),children:\"I want to adopt a pet.\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUserChoice(\"I want to contact website owner.\"),children:\"I want to contact website owner.\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUserChoice(\"I am a shelter or rescue employee.\"),children:\"I am a shelter or rescue employee.\"})})]})}),showBackToMenuButton&&/*#__PURE__*/_jsx(\"button\",{className:styles.backToMenuButton,onClick:showMainMenu,children:\"Back to Main Menu\"})]})]});}// Exporting the ChatbotComponent for use in other parts of the application\nexport default ChatbotComponent;","map":{"version":3,"names":["React","useState","useEffect","useRef","styles","FontAwesomeIcon","faComment","faMinus","faTimes","logo","jsx","_jsx","jsxs","_jsxs","ChatbotComponent","isVisible","setIsVisible","isMinimized","setIsMinimized","messages","setMessages","showMenu","setShowMenu","showBackToMenuButton","setShowBackToMenuButton","endOfMessagesRef","current","scrollIntoView","behavior","length","text","isUser","initial","toggleVisibility","minimizeChatbot","closeChatbot","handleUserChoice","choiceText","currentMessages","chatbotResponse","setTimeout","showMainMenu","children","className","chatbot_toggler","onClick","icon","chatbot","top_buttons","minimize_btn","close_btn","chatbox","map","msg","index","chatbotMessage","src","alt","chatbot_logo","line","lineIndex","userMessage","ref","concat","menu","menuSlideUp","user_choices","backToMenuButton"],"sources":["/Users/kevindiep/Documents/GitHub/Pet-Adoption-Matching/pet-491b/client/src/components/Chat/Chat.jsx"],"sourcesContent":["// Importing necessary React features and styles\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styles from \"./Chat.module.css\";\n// Importing icons for the chat interface from FontAwesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComment, faMinus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n// Logo image for the chatbot\nimport logo from \"./Images/favicon_and_chatbot_logo.jpeg\";\n\n// Chatbot component definition\nfunction ChatbotComponent() {\n  // State hooks for managing chatbot visibility, minimization, messages, and menu display\n  const [isVisible, setIsVisible] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [showMenu, setShowMenu] = useState(false);\n  const [showBackToMenuButton, setShowBackToMenuButton] = useState(false);\n  // useRef hook for managing automatic scrolling to the end of messages\n  const endOfMessagesRef = useRef(null);\n\n  // Effect hook for scrolling to the latest message\n  useEffect(() => {\n    if (endOfMessagesRef.current) {\n      endOfMessagesRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [messages]);\n\n  // Effect hook to initialize chatbot messages upon first appearance\n  useEffect(() => {\n    if (isVisible && !isMinimized && messages.length === 0) {\n      // Set initial messages with a flag to show the logo only for the first set\n      setMessages([\n        {\n          text: [\n            \"Hi there ðŸ‘‹\",\n            \"I'm Scout, the chatbot for Pet Adoption Match\",\n            \"How can I help you?\",\n          ],\n          isUser: false,\n          initial: true,\n        },\n      ]);\n      setShowMenu(true);\n    }\n  }, [isVisible, isMinimized]);\n\n  // Function to toggle chatbot visibility and minimization states\n  const toggleVisibility = () => {\n    if (isMinimized) {\n      // If the chatbot is minimized, unminimize it and make it visible\n      setIsMinimized(false);\n      setIsVisible(true);\n    } else {\n      // Toggle the visible state\n      setIsVisible(!isVisible);\n    }\n  };\n  // Function to minimize the chatbot window\n  const minimizeChatbot = () => {\n    setIsMinimized(!isMinimized);\n  };\n\n  // Function to close the chatbot window and reset states\n  const closeChatbot = () => {\n    setIsVisible(false);\n    setIsMinimized(false);\n    setMessages([]);\n    setShowMenu(false);\n  };\n\n  // Function to handle user choice and generate a chatbot response\n  const handleUserChoice = (choiceText) => {\n    setShowMenu(false);\n    // Immediately show the user's choice\n    setMessages((currentMessages) => [\n      ...currentMessages,\n      { text: choiceText, isUser: true },\n    ]);\n\n    let chatbotResponse = \"\";\n    // Switch statement to generate responses based on user choice\n    switch (choiceText) {\n      // Cases for different user choices\n      // Add chatbot responses accordingly\n      case \"I have a pet that needs a new home.\":\n        chatbotResponse =\n          \"We're here to help! Please provide us with more details about the pet in need so we can assist you better.\";\n        break;\n      case \"I want to adopt a pet.\":\n        chatbotResponse =\n          \"We're so glad you chose us to help you find your new family member.\" +\n          \"Please first sign up for an account or login to start the adoption process.\";\n      case \"I want to contact website owner.\":\n        chatbotResponse =\n          \"Feel free to contact us using the provided contact information on our website. We're happy to assist you!\";\n        break;\n      case \"I am a shelter or rescue employee.\":\n        chatbotResponse =\n          \"Thank you for the important work you do! Please let us know how we can support your efforts.\";\n        break;\n    }\n\n    // Add the chatbot's response after a delay\n    setTimeout(() => {\n      setMessages((currentMessages) => [\n        ...currentMessages,\n        { text: chatbotResponse, isUser: false },\n      ]);\n    }, 500);\n    setShowBackToMenuButton(true);\n  };\n  // Function to show the main menu and hide the back button\n  const showMainMenu = () => {\n    setShowMenu(true);\n    setShowBackToMenuButton(false);\n  };\n\n  return (\n    <div>\n      {/* Button to toggle chat visibility/minimization */}\n      {(!isVisible || isMinimized) && (\n        <button className={styles.chatbot_toggler} onClick={toggleVisibility}>\n          <FontAwesomeIcon icon={faComment} />\n          <span> Chat</span>\n        </button>\n      )}\n      {/* Chatbot UI when visible and not minimized */}\n      {isVisible && !isMinimized && (\n        <div className={styles.chatbot}>\n          <header>\n            <h2>Chatbot</h2>\n            <div className={styles.top_buttons}>\n              <button className={styles.minimize_btn} onClick={minimizeChatbot}>\n                <FontAwesomeIcon icon={faMinus} />\n              </button>\n              <button className={styles.close_btn} onClick={closeChatbot}>\n                <FontAwesomeIcon icon={faTimes} />\n              </button>\n            </div>\n          </header>\n          {/* Main chat area where messages are displayed */}\n          <div className={styles.chatbox}>\n            {messages.map((msg, index) =>\n              msg.initial ? (\n                <div key={index} className={styles.chatbotMessage}>\n                  <img\n                    src={logo}\n                    alt=\"Chatbot Logo\"\n                    className={styles.chatbot_logo}\n                  />\n                  {msg.text.map((line, lineIndex) => (\n                    <p key={lineIndex}>{line}</p>\n                  ))}\n                </div>\n              ) : (\n                <div\n                  key={index}\n                  className={\n                    msg.isUser ? styles.userMessage : styles.chatbotMessage\n                  }\n                >\n                  {!msg.isUser && (\n                    <img\n                      src={logo}\n                      alt=\"Chatbot Logo\"\n                      className={styles.chatbot_logo}\n                    />\n                  )}\n                  <p>{msg.text}</p>\n                </div>\n              )\n            )}\n            {/* Scroll anchor for automatic scrolling to the latest message */}\n            <div ref={endOfMessagesRef} />\n          </div>\n          {/* Conditional rendering of the menu for user choices */}      \n          {showMenu && (\n            <div className={`${styles.menu} ${styles.menuSlideUp}`}>\n              <ul className={styles.user_choices}>\n                <li>\n                  <button\n                    onClick={() =>\n                      handleUserChoice(\"I have a pet that needs a new home.\")\n                    }\n                  >\n                    I have a pet that needs a new home.\n                  </button>\n                </li>\n                <li>\n                  <button\n                    onClick={() => handleUserChoice(\"I want to adopt a pet.\")}\n                  >\n                    I want to adopt a pet.\n                  </button>\n                </li>\n                <li>\n                  <button\n                    onClick={() =>\n                      handleUserChoice(\"I want to contact website owner.\")\n                    }\n                  >\n                    I want to contact website owner.\n                  </button>\n                </li>\n                <li>\n                  <button\n                    onClick={() =>\n                      handleUserChoice(\"I am a shelter or rescue employee.\")\n                    }\n                  >\n                    I am a shelter or rescue employee.\n                  </button>\n                </li>\n              </ul>\n            </div>\n          )}\n          {/* Button to return to the main menu, displayed based on state */}\n          {showBackToMenuButton && (\n            <button className={styles.backToMenuButton} onClick={showMainMenu}>\n              Back to Main Menu\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n// Exporting the ChatbotComponent for use in other parts of the application\nexport default ChatbotComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}