{"ast":null,"code":"var _jsxFileName = \"/Users/kevindiep/Documents/GitHub/Pet-Adoption-Matching/pet-491b/client/src/components/ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create a context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [isNightMode, setIsNightMode] = useState(false); // State to hold night mode status\n\n  // Toggle function\n  const toggleNightMode = () => {\n    setIsNightMode(!isNightMode);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isNightMode,\n      toggleNightMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook to use theme context\n_s(ThemeProvider, \"GhAHa95tqOWj223NcxbBzlBXes4=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isNightMode","setIsNightMode","toggleNightMode","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["/Users/kevindiep/Documents/GitHub/Pet-Adoption-Matching/pet-491b/client/src/components/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Create a context\nconst ThemeContext = createContext();\n\n// Provider component\nexport const ThemeProvider = ({ children }) => {\n  const [isNightMode, setIsNightMode] = useState(false); // State to hold night mode status\n\n  // Toggle function\n  const toggleNightMode = () => {\n    setIsNightMode(!isNightMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isNightMode, toggleNightMode }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n// Hook to use theme context\nexport const useTheme = () => useContext(ThemeContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC5BD,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,oBACEL,OAAA,CAACC,YAAY,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEJ,WAAW;MAAEE;IAAgB,CAAE;IAAAJ,QAAA,EAC5DA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAAT,EAAA,CAfaF,aAAa;AAAAY,EAAA,GAAbZ,aAAa;AAgB1B,OAAO,MAAMa,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnB,UAAU,CAACI,YAAY,CAAC;AAAA;AAACe,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}