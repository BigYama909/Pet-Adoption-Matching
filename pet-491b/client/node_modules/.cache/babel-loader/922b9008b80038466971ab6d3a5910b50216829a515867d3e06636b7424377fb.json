{"ast":null,"code":"import{useEffect,useState}from\"react\";import{useParams,Link}from\"react-router-dom\";import axios from\"axios\";import success from\"../../images/success.png\";import styles from\"./styles.module.css\";import{Fragment}from\"react/cjs/react.production.min\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EmailVerify=()=>{//useState hook to manage the state of validUrl, which determines whether the email verification URL is valid or not.\nconst[validUrl,setValidUrl]=useState(true);// useParams is used to get the parameters (id and token) from the URL.\nconst param=useParams();//used to perform the verification when the component mounts\nuseEffect(()=>{// HTTP GET request to the email verification endpoint.\nconst verifyEmailUrl=async()=>{try{const url=\"http://localhost:8080/api/users/\".concat(param.id,\"/verify/\").concat(param.token);const{data}=await axios.get(url);console.log(data);setValidUrl(true);}catch(error){console.log(error);setValidUrl(false);}};verifyEmailUrl();},[param]);// Render \nreturn/*#__PURE__*/_jsx(Fragment,{children:validUrl?/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsx(\"img\",{src:success,alt:\"success_img\",className:styles.success_img}),/*#__PURE__*/_jsx(\"h1\",{children:\"Email verified successfully\"}),/*#__PURE__*/_jsx(Link,{to:\"/login\",children:/*#__PURE__*/_jsx(\"button\",{className:styles.green_btn,children:\"Login\"})})]}):/*#__PURE__*/_jsx(\"h1\",{children:\"404 Not Found\"})});};export default EmailVerify;","map":{"version":3,"names":["useEffect","useState","useParams","Link","axios","success","styles","Fragment","jsx","_jsx","jsxs","_jsxs","EmailVerify","validUrl","setValidUrl","param","verifyEmailUrl","url","concat","id","token","data","get","console","log","error","children","className","container","src","alt","success_img","to","green_btn"],"sources":["/Users/kevindiep/Documents/GitHub/Pet-Adoption-Matching/pet-491b/client/src/components/EmailVerify/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport success from \"../../images/success.png\";\nimport styles from \"./styles.module.css\";\nimport { Fragment } from \"react/cjs/react.production.min\";\n\n\nconst EmailVerify = () => {\n\t//useState hook to manage the state of validUrl, which determines whether the email verification URL is valid or not.\n\tconst [validUrl, setValidUrl] = useState(true);\n\t// useParams is used to get the parameters (id and token) from the URL.\n\tconst param = useParams();\n\n\t//used to perform the verification when the component mounts\n\tuseEffect(() => {\n\t\t// HTTP GET request to the email verification endpoint.\n\t\tconst verifyEmailUrl = async () => {\n\t\t\ttry {\n\t\t\t\tconst url = `http://localhost:8080/api/users/${param.id}/verify/${param.token}`;\n\t\t\t\tconst { data } = await axios.get(url);\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetValidUrl(true);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetValidUrl(false);\n\t\t\t}\n\t\t};\n\t\tverifyEmailUrl();\n\t}, [param]);\n\n\t// Render \n\treturn (\n\t\t<Fragment>\n\t\t\t{validUrl ? (\n\t\t\t\t<div className={styles.container}>\n\t\t\t\t\t<img src={success} alt=\"success_img\" className={styles.success_img} />\n\t\t\t\t\t<h1>Email verified successfully</h1>\n\t\t\t\t\t<Link to=\"/login\">\n\t\t\t\t\t\t<button className={styles.green_btn}>Login</button>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h1>404 Not Found</h1>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nexport default EmailVerify;\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,SAAS,CAAEC,IAAI,KAAQ,kBAAkB,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,OAAO,KAAM,0BAA0B,CAC9C,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,OAASC,QAAQ,KAAQ,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG1D,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACzB;AACA,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC9C;AACA,KAAM,CAAAc,KAAK,CAAGb,SAAS,CAAC,CAAC,CAEzB;AACAF,SAAS,CAAC,IAAM,CACf;AACA,KAAM,CAAAgB,cAAc,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACH,KAAM,CAAAC,GAAG,oCAAAC,MAAA,CAAsCH,KAAK,CAACI,EAAE,aAAAD,MAAA,CAAWH,KAAK,CAACK,KAAK,CAAE,CAC/E,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAjB,KAAK,CAACkB,GAAG,CAACL,GAAG,CAAC,CACrCM,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CACjBP,WAAW,CAAC,IAAI,CAAC,CAClB,CAAE,MAAOW,KAAK,CAAE,CACfF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC,CAClBX,WAAW,CAAC,KAAK,CAAC,CACnB,CACD,CAAC,CACDE,cAAc,CAAC,CAAC,CACjB,CAAC,CAAE,CAACD,KAAK,CAAC,CAAC,CAEX;AACA,mBACCN,IAAA,CAACF,QAAQ,EAAAmB,QAAA,CACPb,QAAQ,cACRF,KAAA,QAAKgB,SAAS,CAAErB,MAAM,CAACsB,SAAU,CAAAF,QAAA,eAChCjB,IAAA,QAAKoB,GAAG,CAAExB,OAAQ,CAACyB,GAAG,CAAC,aAAa,CAACH,SAAS,CAAErB,MAAM,CAACyB,WAAY,CAAE,CAAC,cACtEtB,IAAA,OAAAiB,QAAA,CAAI,6BAA2B,CAAI,CAAC,cACpCjB,IAAA,CAACN,IAAI,EAAC6B,EAAE,CAAC,QAAQ,CAAAN,QAAA,cAChBjB,IAAA,WAAQkB,SAAS,CAAErB,MAAM,CAAC2B,SAAU,CAAAP,QAAA,CAAC,OAAK,CAAQ,CAAC,CAC9C,CAAC,EACH,CAAC,cAENjB,IAAA,OAAAiB,QAAA,CAAI,eAAa,CAAI,CACrB,CACQ,CAAC,CAEb,CAAC,CAED,cAAe,CAAAd,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}