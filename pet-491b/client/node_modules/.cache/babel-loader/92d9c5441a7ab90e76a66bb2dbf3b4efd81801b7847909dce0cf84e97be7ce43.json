{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chichandmm\\\\Desktop\\\\pet-491b-main\\\\client\\\\src\\\\components\\\\Pet\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PetList = () => {\n  _s();\n  const [pets, setPets] = useState([]);\n  const [searchLocation, setSearchLocation] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [petsPerPage] = useState(9);\n  const [expandedPetId, setExpandedPetId] = useState(null);\n  const handleToggleDescription = petId => {\n    setExpandedPetId(expandedPetId === petId ? null : petId);\n  };\n  const handleSearchLocationChange = event => {\n    setSearchLocation(event.target.value);\n  };\n  const handleSearch = () => {\n    fetch(`http://localhost:8080/api/pets?location=${encodeURIComponent(searchLocation)}`).then(response => response.json()).then(data => {\n      setPets(data);\n      setCurrentPage(1); // Reset to first page with new search\n    }).catch(error => console.error(error));\n  };\n\n  // Calculate total pages and current pets\n  const indexOfLastPet = currentPage * petsPerPage;\n  const indexOfFirstPet = indexOfLastPet - petsPerPage;\n  const currentPets = pets.slice(indexOfFirstPet, indexOfLastPet);\n  const totalPages = Math.ceil(pets.length / petsPerPage);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pet List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchLocation\",\n          placeholder: \"Enter a location\",\n          value: searchLocation,\n          onChange: handleSearchLocationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertical-pet-list\",\n        children: currentPets.length > 0 ? currentPets.map(pet => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pet-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: pet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", pet.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: pet.images && pet.images.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: pet.images[0],\n              alt: `Pet ${pet.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleToggleDescription(pet.id),\n            children: expandedPetId === pet.id ? 'Hide Description' : 'Show Description'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), expandedPetId === pet.id && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pet-description\",\n            children: pet.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, pet.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)) : searchLocation && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pets found for the specified location.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: totalPages\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => paginate(index + 1),\n          children: index + 1\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(PetList, \"/RuH92wbZxx0OOqim3S26ChLj6M=\");\n_c = PetList;\nexport default PetList;\nvar _c;\n$RefreshReg$(_c, \"PetList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PetList","_s","pets","setPets","searchLocation","setSearchLocation","currentPage","setCurrentPage","petsPerPage","expandedPetId","setExpandedPetId","handleToggleDescription","petId","handleSearchLocationChange","event","target","value","handleSearch","fetch","encodeURIComponent","then","response","json","data","catch","error","console","indexOfLastPet","indexOfFirstPet","currentPets","slice","totalPages","Math","ceil","length","paginate","pageNumber","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","className","type","id","placeholder","onChange","onClick","map","pet","name","location","images","src","alt","description","Array","from","_","index","Footer","_c","$RefreshReg$"],"sources":["C:/Users/chichandmm/Desktop/pet-491b-main/client/src/components/Pet/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles.css';\r\n\r\nconst PetList = () => {\r\n  const [pets, setPets] = useState([]);\r\n  const [searchLocation, setSearchLocation] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [petsPerPage] = useState(9);\r\n  const [expandedPetId, setExpandedPetId] = useState(null);\r\n\r\n  const handleToggleDescription = (petId) => {\r\n    setExpandedPetId(expandedPetId === petId ? null : petId);\r\n  };\r\n\r\n  const handleSearchLocationChange = (event) => {\r\n    setSearchLocation(event.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    fetch(`http://localhost:8080/api/pets?location=${encodeURIComponent(searchLocation)}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setPets(data);\r\n        setCurrentPage(1); // Reset to first page with new search\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n  // Calculate total pages and current pets\r\n  const indexOfLastPet = currentPage * petsPerPage;\r\n  const indexOfFirstPet = indexOfLastPet - petsPerPage;\r\n  const currentPets = pets.slice(indexOfFirstPet, indexOfLastPet);\r\n  const totalPages = Math.ceil(pets.length / petsPerPage);\r\n\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <>\r\n    <Header />\r\n    <div className=\"pet-list-container\">\r\n      <h1>Pet List</h1>\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"searchLocation\"\r\n          placeholder=\"Enter a location\"\r\n          value={searchLocation}\r\n          onChange={handleSearchLocationChange}\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n      <div className=\"vertical-pet-list\">\r\n        {currentPets.length > 0 ? (\r\n          currentPets.map(pet => (\r\n            <div key={pet.id} className=\"pet-card\">\r\n              <h2>{pet.name}</h2>\r\n              <p>Location: {pet.location}</p>\r\n              <div className=\"image-container\">\r\n                {pet.images && pet.images.length > 0 && (\r\n                  <img src={pet.images[0]} alt={`Pet ${pet.name}`} />\r\n                )}\r\n              </div>\r\n              <button onClick={() => handleToggleDescription(pet.id)}>\r\n                {expandedPetId === pet.id ? 'Hide Description' : 'Show Description'}\r\n              </button>\r\n              {expandedPetId === pet.id && (\r\n                <p className=\"pet-description\">{pet.description}</p>\r\n              )}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          searchLocation && <p>No pets found for the specified location.</p>\r\n        )}\r\n      </div>\r\n      <div className=\"pagination\">\r\n        {Array.from({ length: totalPages }, (_, index) => (\r\n          <button key={index + 1} onClick={() => paginate(index + 1)}>\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PetList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}