{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chichandmm\\\\Desktop\\\\pet-491b-main\\\\client\\\\src\\\\components\\\\PetCare\\\\index.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './styles.css'; // Import the CSS file, assuming similar styling\n\n// const PetCareSearch = () => {\n//   const [providers, setProviders] = useState([]);\n//   const [searchLocation, setSearchLocation] = useState('');\n\n//   useEffect(() => {\n//     if (searchLocation) {\n//       // Fetch data from backend API endpoint with the searchLocation parameter\n//       fetch(`http://localhost:8080/api/yelp/search?location=${searchLocation}&term=pet care`)  // Update the URL based on your backend setup\n//         .then(response => response.json())\n//         .then(data => setProviders(data.businesses))  // Assuming the backend structure aligns with Yelp's response\n//         .catch(error => console.error('Error:', error));\n//     }\n//   }, [searchLocation]);\n\n//   const [expandedProviderId, setExpandedProviderId] = useState(null);\n\n//   const handleToggleDescription = (providerId) => {\n//     setExpandedProviderId(expandedProviderId === providerId ? null : providerId);\n//   };\n\n//   const handleSearchLocationChange = (event) => {\n//     setSearchLocation(event.target.value);\n//   };\n\n//   return (\n//     <div className=\"pet-care-container\">\n//       <h1>Pet Care Providers</h1>\n//       <div className=\"search-bar\">\n//         <label htmlFor=\"searchLocation\">Search Location:</label>\n//         <input\n//           type=\"text\"\n//           id=\"searchLocation\"\n//           value={searchLocation}\n//           onChange={handleSearchLocationChange}\n//         />\n//       </div>\n//       {searchLocation && (\n//         <p className=\"search-location-indicator\">\n//           Showing results for: <strong>{searchLocation}</strong>\n//         </p>\n//       )}\n//       <div className=\"horizontal-provider-list\">\n//         {providers.map(provider => (\n//           <div key={provider.id} className=\"provider-card\">\n//             <h2>{provider.name}</h2>\n//             <p>Location: {provider.location.address1}, {provider.location.city}</p>\n//             <div className=\"image-container\">\n//               {provider.image_url && (\n//                 <img src={provider.image_url} alt={`Provider ${provider.id}`} />\n//               )}\n//             </div>\n//             <button onClick={() => handleToggleDescription(provider.id)}>\n//               {expandedProviderId === provider.id ? 'Hide Details' : 'Show Details'}\n//             </button>\n//             {expandedProviderId === provider.id && (\n//               <div>\n//                 <p>{provider.location.address1}, {provider.location.city}</p>\n//                 <p>Rating: {provider.rating}</p>\n//                 <p>Phone: {provider.display_phone}</p>\n//               </div>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PetCareSearch;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YelpSearch() {\n  _s();\n  const [businesses, setBusinesses] = useState([]);\n  const [term, setTerm] = useState('pet stores');\n  const [location, setLocation] = useState('San Francisco');\n  const apiKey = 'AnT63ny_O9oYz1UNA2GZZ31Swo61LmYFbNXiywqjyhOfbTK750o_VNYP3uIH4EVmuuWJQzpn93NbmYDfDyIbsi0-5FANgORZ8CmyLNmda69gQ2WYPXrKkn3hjyTgZXYx'; // Replace with your API key\n  const search = async () => {\n    const headers = {\n      Authorization: `Bearer ${apiKey}`\n    };\n    const url = 'https://api.yelp.com/v3/businesses/search';\n    try {\n      const response = await axios.get(url, {\n        headers,\n        params: {\n          term,\n          location,\n          limit: 10\n        }\n      });\n      setBusinesses(response.data.businesses);\n    } catch (error) {\n      console.error('Error fetching data from Yelp:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Find Pet Stores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: term,\n      onChange: e => setTerm(e.target.value),\n      placeholder: \"Search term...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      placeholder: \"Location...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: search,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: businesses.map(business => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: business.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: business.location.address1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)]\n      }, business.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(YelpSearch, \"a9ObNmQfQ7USCOAkhsNMBhkCz4M=\");\n_c = YelpSearch;\nexport default YelpSearch;\nvar _c;\n$RefreshReg$(_c, \"YelpSearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","YelpSearch","_s","businesses","setBusinesses","term","setTerm","location","setLocation","apiKey","search","headers","Authorization","url","response","get","params","limit","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","business","name","address1","id","_c","$RefreshReg$"],"sources":["C:/Users/chichandmm/Desktop/pet-491b-main/client/src/components/PetCare/index.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './styles.css'; // Import the CSS file, assuming similar styling\r\n\r\n// const PetCareSearch = () => {\r\n//   const [providers, setProviders] = useState([]);\r\n//   const [searchLocation, setSearchLocation] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     if (searchLocation) {\r\n//       // Fetch data from backend API endpoint with the searchLocation parameter\r\n//       fetch(`http://localhost:8080/api/yelp/search?location=${searchLocation}&term=pet care`)  // Update the URL based on your backend setup\r\n//         .then(response => response.json())\r\n//         .then(data => setProviders(data.businesses))  // Assuming the backend structure aligns with Yelp's response\r\n//         .catch(error => console.error('Error:', error));\r\n//     }\r\n//   }, [searchLocation]);\r\n\r\n//   const [expandedProviderId, setExpandedProviderId] = useState(null);\r\n\r\n//   const handleToggleDescription = (providerId) => {\r\n//     setExpandedProviderId(expandedProviderId === providerId ? null : providerId);\r\n//   };\r\n\r\n//   const handleSearchLocationChange = (event) => {\r\n//     setSearchLocation(event.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"pet-care-container\">\r\n//       <h1>Pet Care Providers</h1>\r\n//       <div className=\"search-bar\">\r\n//         <label htmlFor=\"searchLocation\">Search Location:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"searchLocation\"\r\n//           value={searchLocation}\r\n//           onChange={handleSearchLocationChange}\r\n//         />\r\n//       </div>\r\n//       {searchLocation && (\r\n//         <p className=\"search-location-indicator\">\r\n//           Showing results for: <strong>{searchLocation}</strong>\r\n//         </p>\r\n//       )}\r\n//       <div className=\"horizontal-provider-list\">\r\n//         {providers.map(provider => (\r\n//           <div key={provider.id} className=\"provider-card\">\r\n//             <h2>{provider.name}</h2>\r\n//             <p>Location: {provider.location.address1}, {provider.location.city}</p>\r\n//             <div className=\"image-container\">\r\n//               {provider.image_url && (\r\n//                 <img src={provider.image_url} alt={`Provider ${provider.id}`} />\r\n//               )}\r\n//             </div>\r\n//             <button onClick={() => handleToggleDescription(provider.id)}>\r\n//               {expandedProviderId === provider.id ? 'Hide Details' : 'Show Details'}\r\n//             </button>\r\n//             {expandedProviderId === provider.id && (\r\n//               <div>\r\n//                 <p>{provider.location.address1}, {provider.location.city}</p>\r\n//                 <p>Rating: {provider.rating}</p>\r\n//                 <p>Phone: {provider.display_phone}</p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PetCareSearch;\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction YelpSearch() {\r\n    const [businesses, setBusinesses] = useState([]);\r\n    const [term, setTerm] = useState('pet stores');\r\n    const [location, setLocation] = useState('San Francisco');\r\n\r\n    const apiKey = 'AnT63ny_O9oYz1UNA2GZZ31Swo61LmYFbNXiywqjyhOfbTK750o_VNYP3uIH4EVmuuWJQzpn93NbmYDfDyIbsi0-5FANgORZ8CmyLNmda69gQ2WYPXrKkn3hjyTgZXYx'; // Replace with your API key\r\n    const search = async () => {\r\n        const headers = {\r\n            Authorization: `Bearer ${apiKey}`,\r\n        };\r\n        const url = 'https://api.yelp.com/v3/businesses/search';\r\n        try {\r\n            const response = await axios.get(url, {\r\n                headers,\r\n                params: { term, location, limit: 10 },\r\n            });\r\n            setBusinesses(response.data.businesses);\r\n        } catch (error) {\r\n            console.error('Error fetching data from Yelp:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Find Pet Stores</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={term}\r\n                onChange={(e) => setTerm(e.target.value)}\r\n                placeholder=\"Search term...\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                value={location}\r\n                onChange={(e) => setLocation(e.target.value)}\r\n                placeholder=\"Location...\"\r\n            />\r\n            <button onClick={search}>Search</button>\r\n            <div>\r\n                {businesses.map((business) => (\r\n                    <div key={business.id}>\r\n                        <h2>{business.name}</h2>\r\n                        <p>{business.location.address1}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default YelpSearch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}