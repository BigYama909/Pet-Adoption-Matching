{"ast":null,"code":"// Import necessary React hooks and styles\nimport React,{useState,useEffect,useRef}from\"react\";import styles from\"./Calculator.module.css\";import{Doughnut}from\"react-chartjs-2\";// Import Doughnut chart component\nimport\"chart.js/auto\";// This import is necessary for Chart.js 3.x and later\n// Define the Calculator component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Calculator(){// Ref to access the chart DOM element\nconst chartRef=useRef(null);// State for selecting pet type\nconst[petType,setPetType]=useState(\"\");// State for storing details about the pet\nconst[petDetails,setPetDetails]=useState({breed:\"\",size:\"\",foodCost:0,groomingCost:0,vetCost:0,additionalCosts:0});// State for the list of breeds based on selected pet type\nconst[breeds,setBreeds]=useState([]);// State for storing the calculation results\nconst[result,setResult]=useState(null);// State for any error messages\nconst[error,setError]=useState(\"\");// Predefined breed options with additional costs\nconst breedOptions={Dog:[{name:\"Golden Retriever\",additionalCost:200},{name:\"Labrador Retriever\",additionalCost:180},{name:\"French Bulldog\",additionalCost:220}],Cat:[{name:\"Siamese\",additionalCost:150},{name:\"Persian\",additionalCost:170},{name:\"Maine Coon\",additionalCost:190}]};// Effect hook to update breeds list and reset breed in petDetails when petType changes\nuseEffect(()=>{if(petType&&breedOptions[petType]){setBreeds(breedOptions[petType]);setPetDetails(prevDetails=>({...prevDetails,breed:\"\"}));}else{setBreeds([]);setPetDetails(prevDetails=>({...prevDetails,breed:\"\"}));}},[petType]);// Function to calculate total and monthly costs, and lifetime cost of pet ownership\nconst calculateCosts=()=>{var _breeds$find;if(!petType||!petDetails.breed||!petDetails.size){setError(\"Please provide all required details.\");return;}setError(\"\");// Base annual cost for any pet\nlet baseAnnualCost=1000;// Additional cost based on breed\nconst breedCost=((_breeds$find=breeds.find(b=>b.name===petDetails.breed))===null||_breeds$find===void 0?void 0:_breeds$find.additionalCost)||0;// Total annual cost calculation\nconst totalAnnualCost=baseAnnualCost+breedCost+parseFloat(petDetails.foodCost)+parseFloat(petDetails.groomingCost)+parseFloat(petDetails.vetCost)+parseFloat(petDetails.additionalCosts);// Monthly cost calculation\nconst monthlyCost=totalAnnualCost/12;// Calculate expected life span based on pet type and size\nconst expectedLifeSpan=calculateLifeExpectancy(petType,petDetails.size);// Calculate lifetime cost\nconst lifetimeCost=totalAnnualCost*expectedLifeSpan;// Generate chart data for pie chart visualizaiton\nconst chartData={labels:[\"Food\",\"Grooming\",\"Vet\",\"Additional Costs\",\"Base Cost\"],datasets:[{label:\"Cost Breakdown\",data:[petDetails.foodCost,petDetails.groomingCost,petDetails.vetCost,petDetails.additionalCosts,baseAnnualCost],backgroundColor:[\"rgba(255, 99, 132, 0.2)\",\"rgba(54, 162, 235, 0.2)\",\"rgba(255, 206, 86, 0.2)\",\"rgba(75, 192, 192, 0.2)\",\"rgba(153, 102, 255, 0.2)\"],borderColor:[\"rgba(255, 99, 132, 1)\",\"rgba(54, 162, 235, 1)\",\"rgba(255, 206, 86, 1)\",\"rgba(75, 192, 192, 1)\",\"rgba(153, 102, 255, 1)\"],borderWidth:1}]};// Set the result state with calcualted costs and chart data for rendering\nsetResult({annualCost:totalAnnualCost,monthlyCost,lifetimeCost,chartData});};// Options for customizing the appearance and functionality of the chart\nconst chartOptions={plugins:{title:{display:true,text:\"Cost Breakdown in Pie Chart\",// Chart title\nfont:{size:40,family:\"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",weight:\"bold\"},color:\"#333\",padding:{top:20,bottom:30}},legend:{display:true,// Show legend\nposition:\"top\",// Legend position\nlabels:{font:{size:13,family:\"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\"},color:\"#444\"}},tooltip:{enabled:true,// Enable tooltips\nmode:\"index\",intersect:false,bodyFont:{size:16},backgroundColor:\"rgba(0,0,0,0.8)\",titleFont:{size:16,weight:\"bold\"},// Custom tooltip format to show currency values\ncallbacks:{label:function(context){let label=context.label;let value=context.parsed;return\"\".concat(label,\": $\").concat(value.toFixed(2));}}}},animation:{animateRotate:true,animateScale:true,duration:1000// Animation duration\n},responsive:true,// Ensure chart is responsive\nmaintainAspectRatio:false,// Allow aspect ratio to change\nlayout:{padding:{left:10,right:10,top:0,bottom:0}}};// Function to calculate expected life span of the pet based on its type and size\nconst calculateLifeExpectancy=(petType,size)=>{if(petType===\"Dog\"){return size===\"Large\"?10:15;}else if(petType===\"Cat\"){return 18;}else{return 5;// Default for 'Other'\n}};// Function to download the results as a text file and the chart image\nconst downloadResults=()=>{if(!result)return;// Ensure there are results to download\nconst filename=\"pet_ownership_cost_estimate.txt\";// Format content for the text file\nconst content=\"Pet Ownership Cost Estimate:\\nPet Type: \".concat(petType,\"\\nBreed: \").concat(petDetails.breed,\"\\nSize: \").concat(petDetails.size,\"\\nAnnual Cost: $\").concat(result.annualCost.toFixed(2),\"\\nMonthly Cost: $\").concat(result.monthlyCost.toFixed(2),\"\\nLifetime Cost: $\").concat(result.lifetimeCost.toFixed(2),\"\\n\");// Create and trigger a download link for the text file\nconst element=document.createElement(\"a\");const file=new Blob([content],{type:\"text/plain\"});element.href=URL.createObjectURL(file);element.download=filename;document.body.appendChild(element);// Required for Firefox\nelement.click();// Check if the chart reference exists and the current instance is available\nif(chartRef.current){const chartInstance=chartRef.current.chartInstance;const url=chartInstance.toBase64Image();// Get the chart image as a base64-encoded string\n// Create a link and trigger the download\nconst imageLink=document.createElement(\"a\");imageLink.href=url;imageLink.download=\"chart.png\";document.body.appendChild(imageLink);// Required for Firefox\nimageLink.click();document.body.removeChild(imageLink);// Clean up\n}};// Render the calculator UI\nreturn/*#__PURE__*/_jsxs(\"div\",{className:styles.calculator,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.h1,children:\"Pet Ownership Cost Calculator\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:styles.error,children:error}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"Pet Type:\"}),/*#__PURE__*/_jsxs(\"select\",{value:petType,onChange:e=>setPetType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Pet Type\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Dog\",children:\"Dog\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Cat\",children:\"Cat\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"Breed:\"}),/*#__PURE__*/_jsxs(\"select\",{value:petDetails.breed,onChange:e=>setPetDetails({...petDetails,breed:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Breed\"}),breeds.map(breed=>/*#__PURE__*/_jsx(\"option\",{value:breed.name,children:breed.name},breed.name))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"Size:\"}),/*#__PURE__*/_jsxs(\"select\",{value:petDetails.size,onChange:e=>setPetDetails({...petDetails,size:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Size\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Small\",children:\"Small\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Large\",children:\"Large\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"Monthly Food Cost ($):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:petDetails.foodCost,onChange:e=>setPetDetails({...petDetails,foodCost:e.target.value}),placeholder:\"Food Cost\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"Annual Grooming Cost ($):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:petDetails.groomingCost,onChange:e=>setPetDetails({...petDetails,groomingCost:e.target.value}),placeholder:\"Grooming Cost\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"Annual Vet Cost ($):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:petDetails.vetCost,onChange:e=>setPetDetails({...petDetails,vetCost:e.target.value}),placeholder:\"Vet Cost\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"Annual Additional Costs ($):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:petDetails.additionalCosts,onChange:e=>setPetDetails({...petDetails,additionalCosts:e.target.value}),placeholder:\"Additional Costs\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:calculateCosts,className:styles.calculateButton,children:\"Calculate\"}),result&&/*#__PURE__*/_jsxs(\"div\",{className:styles.results,children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Annual Cost: $\",result.annualCost.toFixed(2)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Monthly Cost: $\",result.monthlyCost.toFixed(2)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Lifetime Cost: $\",result.lifetimeCost.toFixed(2)]}),/*#__PURE__*/_jsx(\"button\",{onClick:downloadResults,className:styles.downloadButton,children:\"Download Estimate\"}),result&&result.chartData&&/*#__PURE__*/_jsx(\"div\",{className:styles.chartContainer,children:/*#__PURE__*/_jsx(Doughnut,{data:result.chartData,options:chartOptions,ref:chartRef})})]})]});}export default Calculator;","map":{"version":3,"names":["React","useState","useEffect","useRef","styles","Doughnut","jsx","_jsx","jsxs","_jsxs","Calculator","chartRef","petType","setPetType","petDetails","setPetDetails","breed","size","foodCost","groomingCost","vetCost","additionalCosts","breeds","setBreeds","result","setResult","error","setError","breedOptions","Dog","name","additionalCost","Cat","prevDetails","calculateCosts","_breeds$find","baseAnnualCost","breedCost","find","b","totalAnnualCost","parseFloat","monthlyCost","expectedLifeSpan","calculateLifeExpectancy","lifetimeCost","chartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","annualCost","chartOptions","plugins","title","display","text","font","family","weight","color","padding","top","bottom","legend","position","tooltip","enabled","mode","intersect","bodyFont","titleFont","callbacks","context","value","parsed","concat","toFixed","animation","animateRotate","animateScale","duration","responsive","maintainAspectRatio","layout","left","right","downloadResults","filename","content","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","current","chartInstance","url","toBase64Image","imageLink","removeChild","className","calculator","children","h1","onChange","e","target","map","placeholder","onClick","calculateButton","results","downloadButton","chartContainer","options","ref"],"sources":["/Users/kevindiep/Documents/GitHub/Pet-Adoption-Matching/pet-491b/client/src/components/Cost_Calculator/Calculator.jsx"],"sourcesContent":["// Import necessary React hooks and styles\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styles from \"./Calculator.module.css\";\nimport { Doughnut } from \"react-chartjs-2\"; // Import Doughnut chart component\nimport \"chart.js/auto\"; // This import is necessary for Chart.js 3.x and later\n\n// Define the Calculator component\nfunction Calculator() {\n  // Ref to access the chart DOM element\n  const chartRef = useRef(null);\n  // State for selecting pet type\n  const [petType, setPetType] = useState(\"\");\n  // State for storing details about the pet\n  const [petDetails, setPetDetails] = useState({\n    breed: \"\",\n    size: \"\",\n    foodCost: 0,\n    groomingCost: 0,\n    vetCost: 0,\n    additionalCosts: 0,\n  });\n  // State for the list of breeds based on selected pet type\n  const [breeds, setBreeds] = useState([]);\n  // State for storing the calculation results\n  const [result, setResult] = useState(null);\n  // State for any error messages\n  const [error, setError] = useState(\"\");\n\n  // Predefined breed options with additional costs\n  const breedOptions = {\n    Dog: [\n      { name: \"Golden Retriever\", additionalCost: 200 },\n      { name: \"Labrador Retriever\", additionalCost: 180 },\n      { name: \"French Bulldog\", additionalCost: 220 },\n    ],\n    Cat: [\n      { name: \"Siamese\", additionalCost: 150 },\n      { name: \"Persian\", additionalCost: 170 },\n      { name: \"Maine Coon\", additionalCost: 190 },\n    ],\n  };\n\n  // Effect hook to update breeds list and reset breed in petDetails when petType changes\n  useEffect(() => {\n    if (petType && breedOptions[petType]) {\n      setBreeds(breedOptions[petType]);\n      setPetDetails((prevDetails) => ({ ...prevDetails, breed: \"\" }));\n    } else {\n      setBreeds([]);\n      setPetDetails((prevDetails) => ({ ...prevDetails, breed: \"\" }));\n    }\n  }, [petType]);\n\n  // Function to calculate total and monthly costs, and lifetime cost of pet ownership\n  const calculateCosts = () => {\n    if (!petType || !petDetails.breed || !petDetails.size) {\n      setError(\"Please provide all required details.\");\n      return;\n    }\n    setError(\"\");\n    // Base annual cost for any pet\n    let baseAnnualCost = 1000;\n    // Additional cost based on breed\n    const breedCost =\n      breeds.find((b) => b.name === petDetails.breed)?.additionalCost || 0;\n    // Total annual cost calculation\n    const totalAnnualCost =\n      baseAnnualCost +\n      breedCost +\n      parseFloat(petDetails.foodCost) +\n      parseFloat(petDetails.groomingCost) +\n      parseFloat(petDetails.vetCost) +\n      parseFloat(petDetails.additionalCosts);\n\n    // Monthly cost calculation\n    const monthlyCost = totalAnnualCost / 12;\n    // Calculate expected life span based on pet type and size\n    const expectedLifeSpan = calculateLifeExpectancy(petType, petDetails.size);\n    // Calculate lifetime cost\n    const lifetimeCost = totalAnnualCost * expectedLifeSpan;\n\n    // Generate chart data for pie chart visualizaiton\n    const chartData = {\n      labels: [\"Food\", \"Grooming\", \"Vet\", \"Additional Costs\", \"Base Cost\"],\n      datasets: [\n        {\n          label: \"Cost Breakdown\",\n          data: [\n            petDetails.foodCost,\n            petDetails.groomingCost,\n            petDetails.vetCost,\n            petDetails.additionalCosts,\n            baseAnnualCost,\n          ],\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.2)\",\n            \"rgba(54, 162, 235, 0.2)\",\n            \"rgba(255, 206, 86, 0.2)\",\n            \"rgba(75, 192, 192, 0.2)\",\n            \"rgba(153, 102, 255, 0.2)\",\n          ],\n          borderColor: [\n            \"rgba(255, 99, 132, 1)\",\n            \"rgba(54, 162, 235, 1)\",\n            \"rgba(255, 206, 86, 1)\",\n            \"rgba(75, 192, 192, 1)\",\n            \"rgba(153, 102, 255, 1)\",\n          ],\n          borderWidth: 1,\n        },\n      ],\n    };\n    // Set the result state with calcualted costs and chart data for rendering\n    setResult({\n      annualCost: totalAnnualCost,\n      monthlyCost,\n      lifetimeCost,\n      chartData,\n    });\n  };\n\n  // Options for customizing the appearance and functionality of the chart\n  const chartOptions = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Cost Breakdown in Pie Chart\", // Chart title\n        font: {\n          size: 40,\n          family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n          weight: \"bold\",\n        },\n        color: \"#333\",\n        padding: {\n          top: 20,\n          bottom: 30,\n        },\n      },\n      legend: {\n        display: true, // Show legend\n        position: \"top\", // Legend position\n        labels: {\n          font: {\n            size: 13,\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n          },\n          color: \"#444\",\n        },\n      },\n      tooltip: {\n        enabled: true, // Enable tooltips\n        mode: \"index\",\n        intersect: false,\n        bodyFont: {\n          size: 16,\n        },\n        backgroundColor: \"rgba(0,0,0,0.8)\",\n        titleFont: {\n          size: 16,\n          weight: \"bold\",\n        },\n        // Custom tooltip format to show currency values\n        callbacks: {\n          label: function (context) {\n            let label = context.label;\n            let value = context.parsed;\n            return `${label}: $${value.toFixed(2)}`;\n          },\n        },\n      },\n    },\n    animation: {\n      animateRotate: true,\n      animateScale: true,\n      duration: 1000, // Animation duration\n    },\n    responsive: true, // Ensure chart is responsive\n    maintainAspectRatio: false, // Allow aspect ratio to change\n    layout: {\n      padding: {\n        left: 10,\n        right: 10,\n        top: 0,\n        bottom: 0,\n      },\n    },\n  };\n\n  // Function to calculate expected life span of the pet based on its type and size\n  const calculateLifeExpectancy = (petType, size) => {\n    if (petType === \"Dog\") {\n      return size === \"Large\" ? 10 : 15;\n    } else if (petType === \"Cat\") {\n      return 18;\n    } else {\n      return 5; // Default for 'Other'\n    }\n  };\n\n  // Function to download the results as a text file and the chart image\n  const downloadResults = () => {\n    if (!result) return; // Ensure there are results to download\n    const filename = \"pet_ownership_cost_estimate.txt\";\n    // Format content for the text file\n    const content = `Pet Ownership Cost Estimate:\nPet Type: ${petType}\nBreed: ${petDetails.breed}\nSize: ${petDetails.size}\nAnnual Cost: $${result.annualCost.toFixed(2)}\nMonthly Cost: $${result.monthlyCost.toFixed(2)}\nLifetime Cost: $${result.lifetimeCost.toFixed(2)}\n`;\n    // Create and trigger a download link for the text file\n    const element = document.createElement(\"a\");\n    const file = new Blob([content], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = filename;\n    document.body.appendChild(element); // Required for Firefox\n    element.click();\n    // Check if the chart reference exists and the current instance is available\n    if (chartRef.current) {\n      const chartInstance = chartRef.current.chartInstance;\n      const url = chartInstance.toBase64Image(); // Get the chart image as a base64-encoded string\n\n      // Create a link and trigger the download\n      const imageLink = document.createElement(\"a\");\n      imageLink.href = url;\n      imageLink.download = \"chart.png\";\n      document.body.appendChild(imageLink); // Required for Firefox\n      imageLink.click();\n      document.body.removeChild(imageLink); // Clean up\n    }\n  };\n\n  // Render the calculator UI\n  return (\n    <div className={styles.calculator}>\n    {/* Title of the calculator */}\n      <h2 className={styles.h1}>Pet Ownership Cost Calculator</h2>\n      {/* Display error message if there is one */}\n      {error && <p className={styles.error}>{error}</p>}\n       {/* Dropdown to select pet type */}\n      <div>\n        <label className={styles.label}>Pet Type:</label>\n        <select value={petType} onChange={(e) => setPetType(e.target.value)}>\n          <option value=\"\">Select Pet Type</option>\n          <option value=\"Dog\">Dog</option>\n          <option value=\"Cat\">Cat</option>\n          <option value=\"Other\">Other</option>\n        </select>\n      </div>\n      {/* Dropdown to select breed based on the selected pet type */}\n      <div>\n        <label className={styles.label}>Breed:</label>\n        <select\n          value={petDetails.breed}\n          onChange={(e) =>\n            setPetDetails({ ...petDetails, breed: e.target.value })\n          }\n        >\n          <option value=\"\">Select Breed</option>\n          {breeds.map((breed) => (\n            <option key={breed.name} value={breed.name}>\n              {breed.name}\n            </option>\n          ))}\n        </select>\n      </div>\n         {/* Dropdown to select pet size */}\n      <div>\n        <label className={styles.label}>Size:</label>\n        <select\n          value={petDetails.size}\n          onChange={(e) =>\n            setPetDetails({ ...petDetails, size: e.target.value })\n          }\n        >\n          <option value=\"\">Select Size</option>\n          <option value=\"Small\">Small</option>\n          <option value=\"Medium\">Medium</option>\n          <option value=\"Large\">Large</option>\n        </select>\n      </div>\n         {/* Input field for monthly food cost */}\n      <div>\n        <label className={styles.label}>Monthly Food Cost ($):</label>\n        <input\n          type=\"number\"\n          value={petDetails.foodCost}\n          onChange={(e) =>\n            setPetDetails({ ...petDetails, foodCost: e.target.value })\n          }\n          placeholder=\"Food Cost\"\n        />\n      </div>\n      {/* Input field for annual grooming cost */}\n      <div>\n        <label className={styles.label}>Annual Grooming Cost ($):</label>\n        <input\n          type=\"number\"\n          value={petDetails.groomingCost}\n          onChange={(e) =>\n            setPetDetails({ ...petDetails, groomingCost: e.target.value })\n          }\n          placeholder=\"Grooming Cost\"\n        />\n      </div>\n       {/* Input field for annual vet cost */}\n      <div>\n        <label className={styles.label}>Annual Vet Cost ($):</label>\n        <input\n          type=\"number\"\n          value={petDetails.vetCost}\n          onChange={(e) =>\n            setPetDetails({ ...petDetails, vetCost: e.target.value })\n          }\n          placeholder=\"Vet Cost\"\n        />\n      </div>\n         {/* Input field for annual additional costs */}\n      <div>\n        <label className={styles.label}>Annual Additional Costs ($):</label>\n        <input\n          type=\"number\"\n          value={petDetails.additionalCosts}\n          onChange={(e) =>\n            setPetDetails({ ...petDetails, additionalCosts: e.target.value })\n          }\n          placeholder=\"Additional Costs\"\n        />\n        {/* Button to calculate costs based on inputs */}\n      </div>\n      <button onClick={calculateCosts} className={styles.calculateButton}>\n        Calculate\n      </button>\n      {/* Conditionally render the results section if results are present */}\n      {result && (\n        <div className={styles.results}>\n          <p>Annual Cost: ${result.annualCost.toFixed(2)}</p>\n          <p>Monthly Cost: ${result.monthlyCost.toFixed(2)}</p>\n          <p>Lifetime Cost: ${result.lifetimeCost.toFixed(2)}</p>\n          <button onClick={downloadResults} className={styles.downloadButton}>\n            Download Estimate\n          </button>\n          {/* Render the pie chart if result and chartData are available */}\n          {result && result.chartData && (\n            <div className={styles.chartContainer}>\n              <Doughnut\n                data={result.chartData}\n                options={chartOptions}\n                ref={chartRef}\n              />\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Calculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}