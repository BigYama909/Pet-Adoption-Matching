{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chichandmm\\\\Desktop\\\\pet-491b\\\\client\\\\src\\\\components\\\\Pet\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PetList = () => {\n  _s();\n  const [pets, setPets] = useState([]);\n  useEffect(() => {\n    // Fetch data from your backend API endpoint\n    fetch('http://localhost:8080/api/pets') // Update the URL based on your backend setup\n    .then(response => response.json()).then(data => setPets(data)).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pet-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pet List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pets.map(pet => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"pet-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: pet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pet.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: pet.images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: `Pet ${index}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, pet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(PetList, \"7RBAgWZCtqlXVpMU/6w9/5IUzu8=\");\n_c = PetList;\nexport default PetList;\nvar _c;\n$RefreshReg$(_c, \"PetList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PetList","_s","pets","setPets","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pet","name","description","images","image","index","src","alt","id","_c","$RefreshReg$"],"sources":["C:/Users/chichandmm/Desktop/pet-491b/client/src/components/Pet/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles.css';\r\nconst PetList = () => {\r\n  const [pets, setPets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from your backend API endpoint\r\n    fetch('http://localhost:8080/api/pets')  // Update the URL based on your backend setup\r\n      .then(response => response.json())\r\n      .then(data => setPets(data))\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"pet-list-container\">\r\n      <h1>Pet List</h1>\r\n      <ul>\r\n        {pets.map(pet => (\r\n          <li key={pet.id} className=\"pet-box\">\r\n            <h2>{pet.name}</h2>\r\n            <p>{pet.description}</p>\r\n            <div className=\"image-container\">\r\n              {pet.images.map((image, index) => (\r\n                <img key={index} src={image} alt={`Pet ${index}`} />\r\n              ))}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PetList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,gCAAgC,CAAC,CAAE;IAAA,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,OAAO,CAACK,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKa,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCd,OAAA;MAAAc,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBlB,OAAA;MAAAc,QAAA,EACGX,IAAI,CAACgB,GAAG,CAACC,GAAG,iBACXpB,OAAA;QAAiBa,SAAS,EAAC,SAAS;QAAAC,QAAA,gBAClCd,OAAA;UAAAc,QAAA,EAAKM,GAAG,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBlB,OAAA;UAAAc,QAAA,EAAIM,GAAG,CAACE;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBlB,OAAA;UAAKa,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7BM,GAAG,CAACG,MAAM,CAACJ,GAAG,CAAC,CAACK,KAAK,EAAEC,KAAK,kBAC3BzB,OAAA;YAAiB0B,GAAG,EAAEF,KAAM;YAACG,GAAG,EAAG,OAAMF,KAAM;UAAE,GAAvCA,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAoC,CACpD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAPCE,GAAG,CAACQ,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CA7BID,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}